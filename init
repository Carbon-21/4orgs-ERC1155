#!/bin/bash
kill-hlf () {
	docker-compose down 
	containers=$(docker ps -q) && docker kill $containers
	docker network prune -f && docker volume prune -f
}

#only try to start mysql if it is not running already, otherwise sudo would be invoked in vain
start-mysql() {
  if [[ $(ps aux | grep mysql | grep -v grep) ]]; then
    echo "MySQL already running"
  else
    sudo systemctl start mysql
    echo "Started MySQL"
  fi
}

###### +X ######
chmod +x kill
chmod +x git-branch
chmod +x git-push
chmod +x cc-debug
chmod +x cc-build

###### KILL ######
#kill other dockers 
cd ./Explorer
kill-hlf
cd ../artifacts
kill-hlf
cd channel/create-certificate-with-ca
kill-hlf

###### RUN ######
#run mysql
start-mysql
cd ../../../database/sequelize-auto
npm install
cd ..
chmod +x reset-db
./reset-db
cd ../artifacts/channel/create-certificate-with-ca

#run one docker for each CA (each org has 1, incluind the orderer)
docker-compose up -d
sleep 15

#creates CAs and orgs certificates
# su
chmod +x create-certificate-with-ca.sh
./create-certificate-with-ca.sh

#create genisis block, config channel and generate anchors
cd ..
chmod +x create-artifacts.sh
./create-artifacts.sh
# exit

#run chouchdb, orgs peers and orderers dockers
cd ..
docker-compose up -d
sleep 15

#create channel and deploy cahincode on each org
cd ..
chmod +x createChannel.sh
./createChannel.sh
chmod +x deployChaincode.sh
./deployChaincode.sh

#create connection profiles if they don't exist already
cd api-2.0
cd ./config/
[ -f ./connection-carbon.json ] || ./generate-ccp.sh

cd ..
npm install